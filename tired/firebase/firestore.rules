rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() { return request.auth != null; }
    function isSelf(uid) { return isSignedIn() && request.auth.uid == uid; }

    // Organizations and groups
    match /orgs/{orgId} {
      allow read: if isSignedIn();
      allow write: if false; // Only server-side writes (Cloud Functions / API)
    }

    match /groups/{groupId} {
      allow read: if isSignedIn();
      allow write: if false; // Server managed
    }

    // Memberships
    match /members/{memberId} {
      allow read: if isSignedIn();
      allow write: if false; // Server managed
    }

    // Channels and messages
    match /channels/{channelId} {
      allow read: if isSignedIn();
      allow write: if false; // Server managed
    }

    match /messages/{msgId} {
      allow read: if isSignedIn();
      // Client may post messages; server should verify and augment via security + triggers
      allow create: if isSignedIn();
      allow update, delete: if false; // edits/deletes via server for audit
    }

    // Attendance
    match /attendance_policies/{policyId} {
      allow read: if isSignedIn();
      allow write: if false; // Server managed
    }
    match /attendance_sessions/{sessId} {
      allow read: if isSignedIn();
      allow write: if false; // Server managed
    }
    match /attendance_checks/{checkId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && request.resource.data.uid == request.auth.uid;
      allow update, delete: if false;
    }

    // Clock in/out
    match /clock_sessions/{id} {
      allow read: if isSignedIn();
      allow write: if false; // Server managed
    }
    match /clock_records/{id} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && request.resource.data.uid == request.auth.uid;
      allow update, delete: if false;
    }

    // ESG and reports
    match /bills/{id} {
      allow read: if isSignedIn();
      allow write: if false; // Upload via signed URLs; server writes references
    }
    match /reports/{id} {
      allow read: if isSignedIn();
      allow write: if false;
    }

    // Payroll
    match /paystubs/{id} {
      allow read: if isSignedIn() && resource.data.uid == request.auth.uid; // owner only
      allow write: if false; // Server publish only
    }

    // Unmasking + audits
    match /unmask_requests/{id} {
      allow read: if isSignedIn();
      allow write: if false; // Server orchestrates state machine
    }
    match /audits/{id} {
      allow read: if isSignedIn();
      allow write: if false; // append-only via server
    }

    // RAG chunks
    match /kb_chunks/{id} {
      allow read: if isSignedIn();
      allow write: if false; // ingestion pipeline writes
    }

    // User subcollections â€” profiles and audience lists
    match /users/{uid} {
      allow read: if isSelf(uid);
      allow write: if isSelf(uid);

      match /profile_fields/{fieldId} {
        allow read: if isSelf(uid); // Viewer-scoped reads via server API
        allow write: if isSelf(uid);
      }
      match /audience_lists/{listId} {
        allow read, write: if isSelf(uid);
      }
    }
  }
}

